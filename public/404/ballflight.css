/* X-as bezier mag heel gek doen om hook en slice voor te stelln  */
/* Y-as bezier is eigenlijk redelijk hetzelfde wegens bal moet hangen in de lucht, enige variatie is hoogte? */

.ball-wrapper {
  position: absolute;
  top: 0;
  left: 0;
}

.ball{
  position: relative;
  width: 14px;
  height: 14px;
  background-color: var(--ball-color, white);
  left: 0;
  top: 0;
  transform: scale(calc(var(--scene_scale_x) * 1.2));
  transform-origin: top;
  transition: all 2.5s;
  transition-timing-function: cubic-bezier(0,1,1,1);
}

.LANDED .ball,
.LANDED .ball-X,
.LANDED .ball-Y {
  transition: all 1s;
  transition-timing-function: cubic-bezier(0,.45,1,.57)
}

.GREEN_HOP .ball,
.GREEN .ball,
.WATER .ball,
.LANDED .ball,
.HOLE_IN_ONE .ball {
  transform: scale(calc(var(--scene_scale_x) * .6));
}

.ball-X {
  position: relative;
  transition: all 2.5s;
  transform: translateX(var(--ballpositions-start-x));
  transition-timing-function: cubic-bezier(
    0, 
    calc(var(--ball-x-bezier-start, 1)),
    1, 
    calc(var(--ball-x-bezier-end, 1))
  );
}

.ball-Y {
  position: relative;
  transition: all 2.5s;
  transform: translateY(var(--ballpositions-start-y));
  transition-timing-function: cubic-bezier(
    0,
    calc( var(--ball-y-bezier-start, 1)),
    1,
    calc( var(--ball-y-bezier-end, 1))
  );
}

/* 
  todo, 
  - align destination with enum
  - maybe even generate this part with function
*/
.WATER .ball-X {
  transform: translateX(var(--ballpositions-end_water-x));
}
.WATER .ball-Y{
  transform: translateY(var(--ballpositions-end_water-y));
}

.HOLE_IN_ONE .ball-X {
  transform: translateX(var(--ballpositions-end_hole-x));
  transition-timing-function: cubic-bezier( 0,0,1,1 );
 
}
.HOLE_IN_ONE .ball-Y{
  transform: translateY(var(--ballpositions-end_hole-y));
  transition-timing-function: cubic-bezier( 1,0,1,1 );
}

.GREEN .ball-X {
  transform: translateX(var(--ballpositions-end_green-x));
}
.GREEN .ball-Y{
  transform: translateY(var(--ballpositions-end_green-y));
}

.GREEN_HOP .ball-X {
  transform: translateX(calc(var(--ballpositions-end_green-x) - (5 - var(--ball-hop-counter))*5px));
}
.GREEN_HOP .ball-Y{
  transition-timing-function: cubic-bezier( 
    0,calc( var(--ball-hop-counter) * var(--ball-hop-counter) * 0.5 + 2),
    1,calc( var(--ball-hop-counter) * var(--ball-hop-counter) * 0.5 + 1) 
  );
  transform: translateY(calc(var(--ballpositions-end_green-y) - (5 - var(--ball-hop-counter))*5px));
}

.shadow.GREEN_HOP .ball-Y{
 transition-timing-function: linear;
}

.shadow.GREEN_HOP,
.shadow.HOLE_IN_ONE{
  transform: translateY(2px);
}


.GREEN_HOP .ball-X,
.GREEN_HOP .ball-Y{
  transition-duration: calc(var(--ball-hop-counter) * 0.3s);
}